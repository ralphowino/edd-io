{"version":3,"file":null,"sources":["../components/inquirer.js","../components/transformers.js","../components/fields.js","../components/input.js","../components/output.js","../index.js"],"sourcesContent":["var inquirer = require('inquirer');\r\n\r\nclass ClassInquirer {\r\n    loopQuestions(questions_array, index, answers) {\r\n        if (!index) {\r\n            index = 0;\r\n        }\r\n\r\n        if (!answers) {\r\n            answers = {}\r\n        }\r\n\r\n        return inquirer.prompt(questions_array[index]).then(function (answer) {\r\n            Object.assign(answers, answer);\r\n\r\n            if (index === questions_array.length - 1) {\r\n                return answers;\r\n            } else {\r\n                return this.loopQuestions(questions_array, index + 1, answers)\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Modified version of inquirer prompt function\r\n     * @param questions_array\r\n     * @returns {Promise<T>|Promise}\r\n     */\r\n    prompt(questions_array) {\r\n        return new Promise(function (resolve) {\r\n            return resolve(this.loopQuestions(questions_array));\r\n        });\r\n    }\r\n}\r\nexport let Inquirer = new ClassInquirer();","var _ = require('lodash');\r\n\r\nclass ClassTransformers {\r\n\r\n    transformArrayField(field) {\r\n        // return input.choose(field.title + '. What do we do next', [\r\n        // \t{\tvalue: 'add',  name: 'Add'},\r\n        // \t{\tvalue: 'stop', name: 'Stop'}\r\n        // ]).then(function ( selected ) {\r\n        // \tif (selected == 'stop')\r\n        // \t\treturn answers;\r\n        // \tvar items = _.map(field.items, function (item) {\r\n        // \t\treturn item.replace(field.key.concat('[].'), '');\r\n        // \t});\r\n        // \treturn input.fields(field.schema.items, items).then(function (answer) {\r\n        // \t\tanswers.push(answer);\r\n        // \t\treturn input.askArrayQuestion(field, answers)\r\n        // \t})\r\n        // });\r\n    }\r\n\r\n    transformBooleanField(field) {\r\n        return {\r\n            name: field.key,\r\n            message: field.title ? field.title : field.key,\r\n            type: 'confirm'\r\n        }\r\n    }\r\n\r\n// transformCheckboxField(field) {\r\n// \treturn {\r\n// \t\tname: field.key,\r\n// \t\tmessage: field.title ? field.title : field.key,\r\n// \t\tchoices: choices,\r\n// \t\tdefault: _default\r\n// \t}\r\n// }\r\n\r\n    transformDefaultField(field, answer) {\r\n        return {\r\n            name: field.key,\r\n            message: field.title ? field.title : field.key,\r\n            type: 'input',\r\n            default: _.isUndefined(answer) ? field.default : answer\r\n        }\r\n    }\r\n\r\n    transformHelpField(field, answer) {\r\n        console.log('no transform available for help text');\r\n        return null;\r\n    }\r\n\r\n    transformIntegerField(field, answer) {\r\n        return {\r\n            name: field.key,\r\n            message: field.title ? field.title : field.key,\r\n            type: 'input',\r\n            default: _.isUndefined(answer) ? field.default : answer //TODO add validate function\r\n        }\r\n    }\r\n\r\n    transformNumberField(field, answer) {\r\n        return {\r\n            name: field.key,\r\n            message: field.title ? field.title : field.key,\r\n            type: 'input',\r\n            default: _.isUndefined(answer) ? field.default : answer //TODO add validate function\r\n        }\r\n    }\r\n\r\n    transformStringField(field, answer) {\r\n        var question = transformers.transformDefaultField(field, answer);\r\n\r\n        if (field.enum) {\r\n            var choices = _.map(field.enum, function (item) {\r\n                return {value: item, name: item};\r\n            });\r\n            question.type = 'rawlist';\r\n            question.choices = choices;\r\n        }\r\n        return question;\r\n    }\r\n\r\n    transformSubmitField(field, answer) {\r\n        console.log('no transform available for submit buttons');\r\n        return null;\r\n    }\r\n\r\n    transformTextareaField(field, answer) {\r\n        return {\r\n            name: field.key,\r\n            message: field.title ? field.title : field.key,\r\n            type: 'input',\r\n            default: _.isUndefined(answer) ? field.default : answer\r\n        }\r\n    }\r\n}\r\nexport let Transformers = new ClassTransformers();","var _ = require('lodash');\r\n\r\nimport {Inquirer} from './inquirer';\r\nimport {Transformers} from './transformers';\r\n\r\nclass ClassFields {\r\n    askQuestions(form, default_model) {\r\n        var questions = this.getQuestions(form, default_model);\r\n        return Inquirer.prompt(questions);\r\n    }\r\n\r\n    getArrayFields(schema, parent_field) {\r\n        var array_form = [];\r\n        var array_schema = _.cloneDeep(_.get(schema, ['properties', parent_field.key]));\r\n        _.forEach(parent_field.items, function (item_field) {\r\n            if (_.isString(item_field)) {\r\n                item_field = {key: item_field};\r\n            }\r\n            item_field.key = item_field.key.replace(parent_field.key + '[].', ''); // Remove the array key prefix\r\n            array_form.push(this.getNormalField(array_schema, item_field))\r\n        });\r\n        return array_form;\r\n    }\r\n\r\n    getAsteriskFields(schema, schema_form) {\r\n        var fields = _.cloneDeep(_.get(schema, ['properties']));\r\n        _.forEach(fields, function (object, field) {\r\n            field = {key: field};\r\n            schema_form.push(this.getNormalField(schema, field));\r\n        });\r\n        return schema_form;\r\n    }\r\n\r\n    getNormalField(schema, field) {\r\n        var field_schema = _.cloneDeep(_.get(schema, ['properties', field.key]));\r\n        if (_.isUndefined(field_schema))\r\n            field_schema = _.cloneDeep(_.get(schema.items, ['properties', field.key])); //check for array\r\n\r\n        field = _.merge(field_schema, _.get(field, ['schema', 'x-schema-form'], {}), field);\r\n\r\n        if (field.type === 'array') {\r\n            field = this.getArrayFields(schema, field); // Make the field an array of the objects properties\r\n        }\r\n\r\n        return field;\r\n    }\r\n\r\n    getQuestions(array_fields, default_model) {\r\n        var type, questions = [];\r\n        _.forEach(array_fields, function (field) {\r\n            \"use strict\";\r\n            var question;\r\n\r\n            if (_.isArray(field)) {\r\n                question = this.getQuestions(field, default_model);\r\n            } else {\r\n                type = 'transform' + _.capitalize(field.type) + 'Field';\r\n                if (!Transformers[type]) {\r\n                    console.error(type);\r\n                    type = 'transformDefaultField';\r\n                }\r\n                question = Transformers[type](field, _.get(default_model, field.key));\r\n            }\r\n\r\n            if (question != null) {\r\n                return questions.push(question);\r\n            }\r\n        });\r\n        return questions;\r\n    }\r\n\r\n    queries(schema, form, model) {\r\n        var schema_form = [];\r\n\r\n        _.forEach(form, function (field) {\r\n            if (_.isString(field)) {\r\n                field = {key: field};\r\n            }\r\n\r\n            if (field.key !== '*') { // normal fields\r\n                schema_form.push(this.getNormalField(schema, field));\r\n            } else if (field.key === '*') { // dynamic form indicated by asterisk to indicate all fields\r\n                this.getAsteriskFields(schema, schema_form);\r\n            }\r\n        });\r\n        return this.askQuestions(schema_form, model)\r\n    }\r\n}\r\nexport let Fields = new ClassFields();","var inquirer = require('inquirer');\r\n\r\nclass ClassInput {\r\n    ask(message, _default) {\r\n        return inquirer.prompt([{\r\n            name: 'response',\r\n            message: message,\r\n            type: 'input',\r\n            default: _default\r\n        }]).then(function (answers) {\r\n            return answers.response;\r\n        });\r\n    }\r\n\r\n    secret(message, _default) {\r\n        console.log(message);\r\n        return inquirer.prompt([{\r\n            name: 'response',\r\n            message: message,\r\n            type: 'password',\r\n            default: _default\r\n        }]).then(function (answers) {\r\n            return answers.response;\r\n        });\r\n    }\r\n\r\n    confirm(message, _default) {\r\n        return inquirer.prompt([{\r\n            name: 'response',\r\n            message: message,\r\n            type: 'confirm',\r\n            default: _default\r\n        }]).then(function (answers) {\r\n            return answers.response;\r\n        });\r\n    }\r\n\r\n    choose(message, choices, _default) {\r\n        return inquirer.prompt([{\r\n            name: 'response',\r\n            message: message,\r\n            type: 'list',\r\n            choices: choices,\r\n            default: _default\r\n        }]).then(function (answers) {\r\n            return answers.response;\r\n        });\r\n    }\r\n\r\n    choice(question, choices, selected) {\r\n        \"use strict\";\r\n        return inquirer.prompt([{\r\n            name: 'response',\r\n            message: question,\r\n            type: 'list',\r\n            choices: choices,\r\n            default: selected\r\n        }]).then(function (answers) {\r\n            return answers.response;\r\n        });\r\n    }\r\n}\r\nexport let Input = new ClassInput();","var\r\n  chalk = require('chalk'),\r\n  Spinner = require('cli-spinner').Spinner,\r\n  _ = require('lodash');\r\n\r\nclass ClassOutput {\r\n  line() {\r\n    _.each(arguments, (message)=> {\r\n      if (!_.isString(message)) {\r\n        message = JSON.stringify(message);\r\n      }\r\n      console.log(message);\r\n    });\r\n  }\r\n\r\n  info() {\r\n    _.each(arguments, (message)=> {\r\n      if (!_.isString(message)) {\r\n        message = JSON.stringify(message);\r\n      }\r\n      console.info(chalk.cyan(message));\r\n    });\r\n  }\r\n\r\n  success() {\r\n    _.each(arguments, (message)=> {\r\n      if (!_.isString(message)) {\r\n        message = JSON.stringify(message);\r\n      }\r\n      console.info(chalk.green(message));\r\n    });\r\n  }\r\n\r\n  error() {\r\n    _.each(arguments, (message)=> {\r\n      if (!_.isString(message)) {\r\n        message = JSON.stringify(message);\r\n      }\r\n      console.error(chalk.white.bgRed(message));\r\n    });\r\n  }\r\n\r\n  warning() {\r\n    _.each(arguments, (message)=> {\r\n      if (!_.isString(message)) {\r\n        message = JSON.stringify(message);\r\n      }\r\n      console.warn(chalk.yellow(message));\r\n    })\r\n  }\r\n\r\n  spinner(message) {\r\n    let spinner = new Spinner(message + '...%s');\r\n    spinner.setSpinnerString('|/-\\\\');\r\n    return spinner;\r\n  }\r\n}\r\nexport let Output = new ClassOutput();","export {Fields} from './components/fields';\r\nexport {Input} from './components/input';\r\nexport {Output} from './components/output';\r\n\r\nexport function init() {\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["inquirer","require","ClassInquirer","questions_array","index","answers","prompt","then","answer","assign","length","loopQuestions","Promise","resolve","Inquirer","_","ClassTransformers","field","key","title","isUndefined","default","log","question","transformers","transformDefaultField","enum","choices","map","item","value","name","type","Transformers","ClassFields","form","default_model","questions","getQuestions","schema","parent_field","array_form","array_schema","cloneDeep","get","forEach","items","item_field","isString","replace","push","getNormalField","schema_form","fields","object","field_schema","merge","getArrayFields","array_fields","isArray","capitalize","error","model","getAsteriskFields","askQuestions","Fields","ClassInput","message","_default","response","selected","Input","chalk","Spinner","ClassOutput","each","arguments","JSON","stringify","info","cyan","green","white","bgRed","warn","yellow","spinner","setSpinnerString","Output","init"],"mappings":"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"}